version: "3.13"
services:
  ingress:
    command:
    - --api.dashboard=true
    - --api.insecure=true
    - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
    - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http
    - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/letsencrypt.json
    - --certificatesresolvers.letsencrypt-staging.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    - --certificatesresolvers.letsencrypt-staging.acme.httpchallenge.entrypoint=http
    - --certificatesresolvers.letsencrypt-staging.acme.storage=/letsencrypt/letsencrypt-staging.json
    - --entryPoints.http.address=:80
    - --entryPoints.https.address=:443
    - --global.checknewversion=false
    - --global.sendanonymoususage=false
    - --log.level=INFO
    - --metrics.prometheus=true
    - --providers.swarm.allowEmptyServices=true
    - --providers.swarm.endpoint=unix:///var/run/docker.sock
    - --providers.swarm.exposedByDefault=false
    - --providers.swarm.network=public
    - --providers.swarm.refreshSeconds=30
    deploy:
      replicas: 1
      labels:
        io.prometheus.enabled: "true"
        io.prometheus.job_name: traefik
        io.prometheus.scrape_port: "8080"
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 1m0s
        max_failure_ratio: 0.3
        order: start-first
      rollback_config:
        parallelism: 1
        failure_action: continue
        order: start-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 2m0s
      placement:
        constraints:
        - node.role == manager
    image: traefik:3.0
    networks:
      prometheus: null
      public: null
      traefik: null
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      read_only: true
    - type: volume
      source: letsencrypt
      target: /letsencrypt
networks:
  prometheus:
    name: prometheus
    external: true
  public:
    name: public
    external: true
  traefik:
    name: traefik
    external: true
volumes:
  letsencrypt: {}
