entryPoints:
  http:
    address: ":80"
    # uncomment if you want redirect to https
    # http:
    #   redirections:
    #     entryPoint:
    #       to: websecure
    #       scheme: https
  https:
    address: ":443"

certificatesResolvers:
  letsencrypt-production:
    acme:
      # caServer: "https://acme-v02.api.letsencrypt.org/directory"
      storage: "/certificates/letsencrypt-production.json"
      httpChallenge:
        entryPoint: http
  letsencrypt-staging:
    acme:
      # caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      storage: "/certificates/letsencrypt-staging.json"
      httpChallenge:
        entryPoint: http
  step-ca:
    acme:
      caServer: "{{ env "TRAEFIK_CERTIFICATESRESOLVERS_STEP_CA_ACME_CASERVER" }}"
      storage: "/certificates/step-ca.json"
      httpChallenge:
        entryPoint: http

providers:
  docker: # traefik >= 2.0 < 3.0
    # endpoint: "unix:///var/run/docker.sock"
    endpoint: "http://dockerswarm_sd_server:9093"
    swarmMode: true
    network: "traefik_ingress"
    exposedByDefault: false
    defaultRule: "Host(`{{`{{ .Spec.Name }}`}}`)"
    allowEmptyServices: true
  # swarm: # traefik >= v3.0
  #   endpoint: "unix:///var/run/docker.sock"
  #   # endpoint: "http://dockerswarm_sd_server:9093"
  #   network: "traefik_ingress"
  #   exposedByDefault: false
  #   defaultRule: "Host(`{{`{{ .Spec.Name }}`}}`)"
  #   allowEmptyServices: true

api:
  dashboard: true
  insecure: true
  disabledashboardad: true

log:
  level: INFO

accessLog:
  # filePath: "/dev/stdout"
  fields:
    defaultMode: keep
    names:
      ClientUsername: drop
    headers:
      defaultMode: keep
      names:
        Authorization: keep
        User-Agent: keep
        Content-Type: keep

metrics:
  prometheus:
    manualRouting: true
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5.0

global:
  checkNewVersion: false
  sendAnonymousUsage: false
